<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eliana&#39;Attic</title>
  
  <subtitle>be an arrow</subtitle>
  <link href="https://3liana.github.io/atom.xml" rel="self"/>
  
  <link href="https://3liana.github.io/"/>
  <updated>2023-06-12T05:39:34.439Z</updated>
  <id>https://3liana.github.io/</id>
  
  <author>
    <name>eliana</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elizabeth(2005)</title>
    <link href="https://3liana.github.io/2023/06/12/Elizabeth-2005/"/>
    <id>https://3liana.github.io/2023/06/12/Elizabeth-2005/</id>
    <published>2023-06-12T05:37:32.000Z</published>
    <updated>2023-06-12T05:39:34.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="“我只属于…我自己”"><a href="#“我只属于…我自己”" class="headerlink" title="“我只属于…我自己”"></a>“我只属于…我自己”</h1><p>  觉得还是该写一点感想。对这部剧的评价是非常“古典”，具有很强大的能打动人心的那种力量。</p><p>  故事讲述了Sisi挣扎的一生，从她对唯一懂她的父亲倾诉想要骑马奔跑、像吉普赛人那样自由生活开始展开。她并不是“叛逆”，只是格格不入，有的人生来就是black sheep，无法融入所在的群体，被束缚和捆绑，从而陷入痛苦。从楼上掉落，Sisi第一次遇见死神，生来孤独的她也和死神开始了独特的依恋与纠缠。</p><p>  和奥地利皇帝浪漫的相爱给了她昏头的爱情。她没有考虑之后的生活是否如意，就激动地投入了宫廷地怀抱。第一次相爱是这样的，被冲昏头脑，盲目幸福，以为得到了拯救和自由。直到被皇太后Sophie管教、失去女儿又失去和儿子见面的机会，Sisi才得到了当头一棒，逐渐清醒，不再天真、学会狠心，和皇帝谈判逐渐获得权力。</p><p>  在第一部分的结尾，Sisi自信地对死神宣告”我不再需要你，请你离开“。</p><p>  获得权利也是被权力绑架，斗争胜利带来的快乐也是一时的。从第二部分的开头，Sisi无法适应宫廷生活的束缚，发出了”宁愿穿上疯人院的束缚衣而不是宫廷的紧身衣”的呐喊。而当皇帝背叛了她之后，她更是发出了“你的背叛最终使我得到自由”的呼唤。</p><p>  压抑本性的痛苦让Sisi忽略了儿子的感受，太子Rudolf在孤独中也成为了死神的朋友。在皇帝背叛后，Sisi环游各国近二十年，肆无忌惮地追求自己的自由，对皇宫的害怕和自己的骄傲让她对儿子的求救视而不见，最终导致儿子的自杀，带给Sisi更大的痛苦。和死去的父亲对话，重复第一幕的童年对唱，带给观众时过境迁、经历一切折磨与斗争，而当初的痛苦和孤独仍然不变的悲凉之感。Sisi呼唤死神，而死神不愿回应。</p><p>  （和死神的”最后一舞“真的好好听啊）</p><p>  和皇帝最后的湖中相见也是令人感慨的一幕。皇帝在压抑的环境中长大、也适应压抑，他深爱Sisi，希望两人可以在最后达成相互的理解。而Sisi没有选择压抑和适应，奔向了最后的孤独。这是两种人生选择，而Franz Joseph的人生虽然比Sisi更妥协，但是在他的心境下，也许是更平静和幸福的一种人生。</p><p>  在这部剧中最看不懂的是关于政治的部分…….在奥匈帝国的时代，monarchy的权力究竟是多大，君主立宪到了什么地步，而为什么刺杀君主成为无政府主义者的行动。</p><p>关于演员：</p><p>Sisi的演员和安东尼娅家族的女主还是挺像的，属于那种坚毅、有力量感、能够表达痛苦的欧洲女人的脸。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;“我只属于…我自己”&quot;&gt;&lt;a href=&quot;#“我只属于…我自己”&quot; class=&quot;headerlink&quot; title=&quot;“我只属于…我自己”&quot;&gt;&lt;/a&gt;“我只属于…我自己”&lt;/h1&gt;&lt;p&gt;  觉得还是该写一点感想。对这部剧的评价是非常“古典”，具有很强大的能打动人</summary>
      
    
    
    
    <category term="观剧" scheme="https://3liana.github.io/categories/%E8%A7%82%E5%89%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>BUAA_Object-Oriented_Unit1</title>
    <link href="https://3liana.github.io/2023/03/16/BUAA_Object-Oriented_Unit1/"/>
    <id>https://3liana.github.io/2023/03/16/BUAA_Object-Oriented_Unit1/</id>
    <published>2023-03-15T16:00:00.000Z</published>
    <updated>2023-06-12T05:38:27.999Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hw1"><a href="#hw1" class="headerlink" title="hw1"></a>hw1</h2><h3 id="度量"><a href="#度量" class="headerlink" title="度量"></a>度量</h3><p><img src="https://i.postimg.cc/MKtbDgc7/Main-hw1.png" alt="Main_hw1"></p><h3 id="每个类的作用"><a href="#每个类的作用" class="headerlink" title="每个类的作用"></a>每个类的作用</h3><ul><li>Expr，有ArrayList&lt;Term&gt;，表示多个Term相加</li><li>Term，有ArrayList&lt;Factor&gt;表示多个Factor相乘</li><li>Factor，具有toPoly方法</li><li>Number，Factor的子类，表示带符号的数字</li><li>Var，Factor的子类，表示带幂次方的变量x或y或z</li><li>ExprFactor，Factor的子类，表示带幂次方的表达式</li><li>Poly多项式，具有ArrayList&lt;Mono&gt;以及若干加减和乘法的方法</li><li>Mono单项式，具有系数，x的次方数，y的次方数，z的次方数这些属性以及若干方法</li><li>Parser语法分析器，和Lexer一起使用从而把输入的String解析成一棵语法树</li><li>Lexer 词法分析器，通过next()方法来读取下一个curToken</li><li>Change对String类的字符串进行预处理</li></ul><h3 id="架构设计体验"><a href="#架构设计体验" class="headerlink" title="架构设计体验"></a>架构设计体验</h3><p>由于在上学期并没有学习先导课cpp，而是选择了swift，导致hw1布置下来的时候，我对递归下降以及java 的语法完全不清楚，除了Poly和Mono还有字符串处理类之外的类我都是模仿training1进行构建的。</p><p>由于training1进行的是将表达式转化为后缀，所以我在运算表达式这一步遇到了麻烦，不知道即使将expr的结构解析出来了，又将要如何去进行复杂的运算和化简，但是这一步从往届的博客中得到了启示。</p><p>我加入了<strong>Mono</strong>类和<strong>Poly</strong>类，Mono类含有表示x的指数的indexOfX，表示y的指数的indexOfY，表示z的指数的indexOfZ，以及系数Coe，还有一个toString方法（可以进行优化以简化表达式输出）。Poly即多项式，表示许多单项式的相加。由于Number和Var可以轻易地转化为多项式和单项式，Term转化为的多项式即是其元素ArrayList<Factor>中每个Factor转化为的多项式相乘，而Expr转化为的多项式即是其元素ArrayList<Term>中每个Factor转化为的多项式相加。</p><p>通过这个方法，我们把复杂的问题转化成了分割开来可以处理的小问题，降低了耦合度。单独为Mono设置单项式加减乘和为Poly设置多项式加减乘都不困难，而Expr层层调用toPoly也不困难，至于由String到Expr的解析过程则由Lexer和Parser完成。每个部分各司其职，让我初步体会到了面向对象封装、设置接口的思想的方便。</p><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><blockquote><p><strong>OCavg</strong>是类平均圈复杂度</p><p><strong>OCmax</strong>是类最大圈复杂度</p><p><strong>WMC</strong>是类总圈复杂度</p></blockquote><p><img src="https://i.postimg.cc/x8p8kGCz/hw1.png" alt="hw1复杂度"></p><h2 id="hw2"><a href="#hw2" class="headerlink" title="hw2"></a>hw2</h2><h3 id="架构设计体验-1"><a href="#架构设计体验-1" class="headerlink" title="架构设计体验"></a>架构设计体验</h3><p>这次作业相比hw1增加的部分是自定义函数和三角函数，因此在Factor部分新加入了SinFactor,CosFactor,FuncFactor。新加入了Define类用来记录自定义函数的名字和形式参数，也定义了方法用于替换形参和实参。在Parse部分对形式符合自定义函数的部分进行了解析。</p><h3 id="分析bug"><a href="#分析bug" class="headerlink" title="分析bug"></a>分析bug</h3><p>第一次作业和第二次作业有一个共同的bug，就是没有注意到数字是可以带符号的，在我一开始测试的一些数据里，形如“+NumFactor”的情况中，会将“+NumFactor”视作一个Term，加号会被分析为Term的符号，因此不需要解析NumFactor的符号。但是在形如“sin（Factor）”的式子里面，不考虑符号就会出现runtimeError。这是一个很简单但是却很致命的bug。</p><p>改出bug后的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">BigInteger num;</span><br><span class="line">            <span class="keyword">if</span> (lexer.peek().equals(<span class="string">&quot;-&quot;</span>)) &#123;</span><br><span class="line">                lexer.next();</span><br><span class="line">                num = <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;-&quot;</span> + lexer.peek());</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (lexer.peek().equals(<span class="string">&quot;+&quot;</span>)) &#123;</span><br><span class="line">                lexer.next();</span><br><span class="line">                num = <span class="keyword">new</span> <span class="title class_">BigInteger</span>(lexer.peek());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                num = <span class="keyword">new</span> <span class="title class_">BigInteger</span>(lexer.peek());<span class="comment">//Integer.parseInt(lexer.peek());</span></span><br><span class="line">            &#125;</span><br><span class="line">            lexer.next();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Number</span>(num);</span><br></pre></td></tr></table></figure><p>第二次作业还有一个bug是sin和cos括号里面的内容必须是Factor，但是ExprFactor解析出来的也可能不需要加括号，而Var幂函数解析出来的反而可能要加括号，因为没有注意到这个问题，在强测中我得到了很多format error。</p><p>更改的方法是增加对字符串的判断，如果不符合Factor的定义就加上一层括号使之成为ExprFactor去符合定义，这样才能放在必须是Factor的地方。</p><h3 id="复杂度分析-1"><a href="#复杂度分析-1" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><p><img src="https://i.postimg.cc/9FSzCBs3/hw2.jpg" alt="hw2复杂度"></p><h2 id="hw3"><a href="#hw3" class="headerlink" title="hw3"></a>hw3</h2><h3 id="架构设计体验-2"><a href="#架构设计体验-2" class="headerlink" title="架构设计体验"></a>架构设计体验</h3><p>相比第二次作业增加了求导因子</p><p>新增部分如下：</p><ul><li><p>求导因子类DeFactor</p><p>以下是这个类中比较重要的数据和方法</p><blockquote><p>Char ch</p><p>Expr expr</p><p><strong>Poly toPoly(){</strong></p><p>​    <strong>return expr.toDiffPoly（ch）</strong></p><p><strong>}</strong></p></blockquote></li><li><p>对Expr，Term和Factor（除了DeFactor）增加了toDiffPoly进行求导</p></li></ul><p>相比第二次作业还增加了可以在定义函数部分调用已经定义过的函数</p><p>因此新增的处理是在Define类读入定义的时候预先对表达式进行处理替换。</p><h3 id="bug分析"><a href="#bug分析" class="headerlink" title="bug分析"></a>bug分析</h3><p>这次作业在互测中被找出来了一个bug。</p><blockquote><p>在前几次作业中，exprFactor的幂次不能超过8。</p><p>在这次作业中，形如</p><blockquote><p>1</p><p>d(x) &#x3D; (（x）**2)**6</p><p>d(x)</p></blockquote><p>的数据中，由于我对d(x)定义中右边的式子在读入的时候进行了parser-toPoly-toString的处理以应对增加的“可以调用已经定义的函数”要求，所以实际上可能会遇到**(x)**12**这样的情况，原先在parseExprFactor时只读入一位幂次方的方法就会出错。</p></blockquote><p>这次bug让我体会到，一种改动可能会引起蝴蝶效应产生意想不到的bug，还是应该充分测试。另一方面，如果我从第一次作业就预先按照可能会有多位来处理parseExprFactor，这样的bug也就不会产生了。</p><h3 id="复杂度分析-2"><a href="#复杂度分析-2" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><p><img src="https://i.postimg.cc/C55LVZNL/hw3.jpg" alt="hw3复杂度"></p><h2 id="心得体会"><a href="#心得体会" class="headerlink" title="心得体会"></a>心得体会</h2><p>  第一单元的OO作业对我来说是一个慢慢成长的过程，我看着代码风格分慢慢从不足50成长到最后一次作业的100，第一周一边学java语法一边学习面向对象知识直到ddl也完成不了任务没有通过公测，第二周在周五通过公测但是没有好好做测试没进互测，到第三周在周五通过公测并且在周日第一次进入互测。这个成长的过程是痛苦的，但是也有很多的成就感。除了对面向对象内容的学习，我还学会了很多自主学习的方法，在心态上也有非常多的成长。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hw1&quot;&gt;&lt;a href=&quot;#hw1&quot; class=&quot;headerlink&quot; title=&quot;hw1&quot;&gt;&lt;/a&gt;hw1&lt;/h2&gt;&lt;h3 id=&quot;度量&quot;&gt;&lt;a href=&quot;#度量&quot; class=&quot;headerlink&quot; title=&quot;度量&quot;&gt;&lt;/a&gt;度量&lt;/h3&gt;&lt;p</summary>
      
    
    
    
    <category term="专业课" scheme="https://3liana.github.io/categories/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>CityWalk·蜂巢剧场·《一个陌生女人的来信》</title>
    <link href="https://3liana.github.io/2023/03/03/CityWalk%C2%B7%E8%9C%82%E5%B7%A2%E5%89%A7%E5%9C%BA%C2%B7%E3%80%8A%E4%B8%80%E4%B8%AA%E9%99%8C%E7%94%9F%E5%A5%B3%E4%BA%BA%E7%9A%84%E6%9D%A5%E4%BF%A1%E3%80%8B/"/>
    <id>https://3liana.github.io/2023/03/03/CityWalk%C2%B7%E8%9C%82%E5%B7%A2%E5%89%A7%E5%9C%BA%C2%B7%E3%80%8A%E4%B8%80%E4%B8%AA%E9%99%8C%E7%94%9F%E5%A5%B3%E4%BA%BA%E7%9A%84%E6%9D%A5%E4%BF%A1%E3%80%8B/</id>
    <published>2023-03-03T02:51:00.000Z</published>
    <updated>2023-06-12T05:07:34.905Z</updated>
    
    <content type="html"><![CDATA[<img src="https://i.postimg.cc/mZ8bt69g/6fa3b7ddc9f14fd99517d44589fc428.jpg" style="zoom:150%;" /><p>开学前两周完全被OO干烂心态所以忙里偷闲一小下（手动orz</p><p>二月居然只读了一本书，是杜拉斯的《情人》，好想看同名电影但是还没有找到时间</p><p>昨天在英语课上开始看伍尔夫的《达洛维夫人》。</p><img src="https://i.postimg.cc/7LDc1q88/37865bd71e3225e18f1c53efd3adfae.jpg" style="zoom:200%;" /><img src="https://i.postimg.cc/fbw2t5mM/6740538956a4920fbea203375fc455d.jpg" style="zoom:200%;" /><h2 id="先讲讲剧吧"><a href="#先讲讲剧吧" class="headerlink" title="先讲讲剧吧"></a>先讲讲剧吧</h2><p>《一个陌生女人的来信》<br>第一点是表演形式有非常震撼的地方（比如摇滚元素，吓得我前面的小哥哥一哆嗦）。用脱掉六条（还是七条）黑色内裤最后露出白色内裤表现女人挣扎的内心。还有做菜居然是真做，把肉放进热锅里会冒烟还有香味。女人弹吉他表示爱意真的非常动人。还有第二次和W先生在一起那天，用了手持camera的方式来表现玫瑰和女人的情欲，真的非常神奇，镜头里投影的画面和床单下滚动的人影，即使是独角剧也可以非常生动。<br>第二点是演技吧。黄湘丽一开始以写遗书的女人登场，但是当她讲起十三岁的故事，弹唱起十三岁的歌，整个人的声音变成了少女。真的是演什么像什么，不愧是独角剧女王。因为坐在靠后的位置，在手持camera那一段是我很少的能够看清演员表情的时候，不管是开心、希望还是痛苦都可以传达到观众的心里，真的好有灵气。而且她真的非常优雅、跑跑跳跳的动作都做得非常到位，不管是少女的轻快，追求爱情的焦躁，明知追求的爱并不明智的痛苦，对贫民窟的痛恨，都用肢体语言传达得非常到位。结束的时候工作人员说那些歌曲都是演员本人作词作曲，真的好厉害。<br>第一次看原著可能是在初中的时候，那个时候有种懵懵懂懂的震撼，并不懂其中的疯狂，但是下意识有种“哇 好厉害”的感觉，可能还是茨威格的笔力让我折服。这次看的时候全程在想一个问题<strong>“她为什么爱他？”</strong>，我感觉其中最重要的原因是自恋，疯狂地爱一个自己根本不了解的人其实本质是爱那个疯狂的奉献的自己吧，所以最后去爱孩子其实也可以解释为孩子是一个更符合自恋的对象。不过关于这个问题真的还想听听其他人的看法。</p><h2 id="遇见有趣的咖啡店是最有趣的事情！"><a href="#遇见有趣的咖啡店是最有趣的事情！" class="headerlink" title="遇见有趣的咖啡店是最有趣的事情！"></a>遇见有趣的咖啡店是最有趣的事情！</h2><img src="https://i.postimg.cc/pVnwtGBS/b4c3d9ef4bd410edebd116219f8df47.jpg" style="zoom:200%;" />这家咖啡店还蛮有意思的，总之会送小杯咖啡让别人品尝味道就是很了不起的行为。不过除了了解豆子之外，我还很想知道这一杯是怎么做出来的，是手冲、半自动机萃取还是别的。（但是没问，倒不是社牛的问题，主要是不想打扰看起来还蛮忙的咖啡师，下次有机会还是去问！)]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;https://i.postimg.cc/mZ8bt69g/6fa3b7ddc9f14fd99517d44589fc428.jpg&quot; style=&quot;zoom:150%;&quot; /&gt;

&lt;p&gt;开学前两周完全被OO干烂心态所以忙里偷闲一小下（手动orz&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="CityWalk" scheme="https://3liana.github.io/categories/CityWalk/"/>
    
    
  </entry>
  
  <entry>
    <title>计组记录</title>
    <link href="https://3liana.github.io/2022/12/31/%E8%AE%A1%E7%BB%84%E8%AE%B0%E5%BD%95/"/>
    <id>https://3liana.github.io/2022/12/31/%E8%AE%A1%E7%BB%84%E8%AE%B0%E5%BD%95/</id>
    <published>2022-12-31T04:57:58.000Z</published>
    <updated>2023-06-13T14:25:50.855Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计组记录"><a href="#计组记录" class="headerlink" title="计组记录"></a>计组记录</h1><h2 id="你会看到什么"><a href="#你会看到什么" class="headerlink" title="你会看到什么"></a>你会看到什么</h2><p>因为本人真的非常不擅长讲清楚一个知识点，所以这篇只是一个自我记录，不辜负辛辛苦苦学习计组的大半个学期，大概没有任何指导性作用。不过你还是可以通过本文了解北航的6系计组到底都让人干了点啥（）</p><p><img src="https://i.postimg.cc/2j2G5nzn/1f267c60f1776bc8022837cb5ff6a8a.png" alt="总览"></p><h2 id="pre"><a href="#pre" class="headerlink" title="pre"></a>pre</h2><ol><li>logisim：简单的状态机</li><li>verilog：简单的状态机（因为当时不太清楚mealy型状态机输出会早于moore型状态机，所以面向波形编程了orz）</li><li>mips：求根（除了不能盲目列举之外没啥要注意的）</li></ol><p>过了的时候真的很开心，不过事实是，我还是菜鸡））））</p><h2 id="p0（logisim）"><a href="#p0（logisim）" class="headerlink" title="p0（logisim）"></a>p0（logisim）</h2><p>两道简单的状态机，一道斐波那契变形，最后一道题需要对logisim的时序部件比较熟悉</p><h2 id="p1（verilog状态机）"><a href="#p1（verilog状态机）" class="headerlink" title="p1（verilog状态机）"></a>p1（verilog状态机）</h2><p>难度和pre差不多</p><p>就是状态机</p><h2 id="p2（mips）"><a href="#p2（mips）" class="headerlink" title="p2（mips）"></a>p2（mips）</h2><p>首挂（泪目）</p><p>心态会有点崩溃的</p><p>反思出了几个问题：</p><ul><li><p>因为前三次都过了所以没有很重视计组，心态不太正确</p></li><li><p>没有弄清楚for，while，do-while三种循环的区别（for和while是一样的）</p><p>（本质其实是我c语言学得菜）</p></li><li><p>递归的“保护寄存器的值”的本质那时候还不太了解</p></li></ul><p>第二次解决了后两个问题，很顺利地写出了三道题</p><p>第三题是一道允许有括号的表达式计算（给了c语言代码）</p><h2 id="p3-（logisim-单周期）"><a href="#p3-（logisim-单周期）" class="headerlink" title="p3 （logisim 单周期）"></a>p3 （logisim 单周期）</h2><p>做课下的时候一次就过了三个测还很高兴</p><p>然后又被课上狠狠打击</p><p>反思出来的问题是：</p><ul><li><p>我其实不太了解logisim各个部件</p></li><li><p>没有通读指令集（lw，lb，lh以及sw，sh，sb都只是模模糊糊地会用，其实并不精确）</p><p>（这个问题在p6也背刺了我一下）</p></li></ul><p><img src="https://i.postimg.cc/CxqbbQ8p/425374dbaaa0b3e3203d136dbadbf84.png" alt="logisim部件"></p><p>因为实在太心碎把自己关进了图书馆（本学期第一次去图书馆成就get）</p><h2 id="p4（verilog单周期）"><a href="#p4（verilog单周期）" class="headerlink" title="p4（verilog单周期）"></a>p4（verilog单周期）</h2><p>花了很长时间去了解verilog要怎么搭建电路</p><p>也花了很长时间debug</p><p>那个时候看觉得p4很难，花了一整个周末</p><p>从后来的眼光看，p4真的好简单</p><h2 id="p5（verilog多周期）"><a href="#p5（verilog多周期）" class="headerlink" title="p5（verilog多周期）"></a>p5（verilog多周期）</h2><p>从黑书上了解了多周期的基本原理</p><p>从大佬的博客<a href="https://thysrael.github.io/">qsgg的博客</a>上学会了AT法</p><p>（从黑书的做法改成AT法没花很长时间）</p><p>从这个时候获取知识的方法就变成了各路大佬的博客</p><p>“无脑阻塞”之类的知识对我来说也是口口相传得来的</p><p>不太了解大佬都是从哪里学会的</p><p>过得很神奇（问答我的助教说是那道题测试点太弱了</p><h2 id="p6（加了很多指令和乘除模块的verilog多周期）"><a href="#p6（加了很多指令和乘除模块的verilog多周期）" class="headerlink" title="p6（加了很多指令和乘除模块的verilog多周期）"></a>p6（加了很多指令和乘除模块的verilog多周期）</h2><p>做课下的时候不情不愿的，因为看起来工作量真的很大</p><p>但是结果倒是出奇地顺利</p><p>debug基本上只de了一个sb</p><p>过得依然很神奇，课上tle没过，但是助教复核的时候给过了</p><p>指令是<strong>shl：交换hi寄存器和lo寄存器的值</strong></p><p>更神奇的是上机上到四分之三被救护车拉去了方舱</p><p><em><del>新冠初体验</del></em></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>其实过了p6之后还有两周上机，如果愿意的话可以挑战p7和p8，但是我全gap了（复习了概统还有其他一学期没学过的东西）</p><p>没有挑战p7有一点点遗憾</p><p>想的就是：过了p6已经能拿一个我可以接受的分数了</p><p><em>希望能成为更加勇敢的人</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计组记录&quot;&gt;&lt;a href=&quot;#计组记录&quot; class=&quot;headerlink&quot; title=&quot;计组记录&quot;&gt;&lt;/a&gt;计组记录&lt;/h1&gt;&lt;h2 id=&quot;你会看到什么&quot;&gt;&lt;a href=&quot;#你会看到什么&quot; class=&quot;headerlink&quot; title=&quot;你会看到什</summary>
      
    
    
    
    <category term="专业课" scheme="https://3liana.github.io/categories/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://3liana.github.io/2022/10/07/hello-world/"/>
    <id>https://3liana.github.io/2022/10/07/hello-world/</id>
    <published>2022-10-07T08:18:05.581Z</published>
    <updated>2023-06-12T05:02:34.720Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
